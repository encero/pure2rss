package pure2rss_test

import (
	"embed"
	"testing"
	"time"

	"github.com/matryer/is"

	"github.com/encero/pure2rss/src/pure2rss"
)

//go:embed sitemaps/*
var sitemaps embed.FS

var exampeSiteMapListXML = `
<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="//blog.purestorage.com/wp-content/plugins/wordpress-seo/css/main-sitemap.xsl"?>
    <sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
        <sitemap>
            <loc>https://blog.purestorage.com/post-sitemap.xml</loc>
            <lastmod>2024-05-01T19:29:11+00:00</lastmod>
        </sitemap>
        <sitemap>
            <loc>https://blog.purestorage.com/post-sitemap2.xml</loc>
            <lastmod>2024-02-27T18:31:11+00:00</lastmod>
        </sitemap>
    </sitemapindex>
    <!-- XML Sitemap generated by Yoast SEO -->
`

func TestParseSitemapList(t *testing.T) {
	is := is.New(t)

	file, err := sitemaps.Open("sitemaps/sitemap_index.xml")
	is.NoErr(err)
	defer file.Close()

	list, err := pure2rss.ParseSiteMapList(file)
	is.NoErr(err)

	is.Equal(len(list), 6) // parsed sitemap has two items

	first := list[0]
	second := list[1]

	is.Equal(first.Loc, "https://blog.purestorage.com/post-sitemap.xml")
	is.Equal(second.Loc, "https://blog.purestorage.com/post-sitemap2.xml")
}

var exampleSitemapXML = `
<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="//blog.purestorage.com/wp-content/plugins/wordpress-seo/css/main-sitemap.xsl"?>
    <urlset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd http://www.google.com/schemas/sitemap-image/1.1 http://www.google.com/schemas/sitemap-image/1.1/sitemap-image.xsd" xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
        <url>
            <loc>https://blog.purestorage.com/purely-technical/pure-storages-take-on-server-flash-caching/</loc>
            <lastmod>2024-02-16T19:26:25+00:00</lastmod>
            <image:image>
                <image:loc>https://blog.purestorage.com/wp-content/uploads/2012/02/espresso-300x300.jpg</image:loc>
            </image:image>
            <image:image>
                <image:loc>https://blog.purestorage.com/wp-content/uploads/2012/02/Pure_Cappuchino-300x249.jpg</image:loc>
            </image:image>
        </url>
        <url>
            <loc>https://blog.purestorage.com/purely-informational/take-a-picture-itll-last-longer/</loc>
            <lastmod>2024-02-16T19:26:28+00:00</lastmod>
            <image:image>
                <image:loc>https://blog.purestorage.com/wp-content/uploads/2011/04/0c474dfe-a2b1-40e6-bcd2-a67b6cb493a5.jpeg</image:loc>
            </image:image>
        </url>
        <url>
            <loc>https://blog.purestorage.com/purely-technical/deduplication-compression-and-sql-server-databases-part-1/</loc>
            <lastmod>2024-02-16T19:26:31+00:00</lastmod>
        </url>
    </urlset>
`

func TestParseSitemap(t *testing.T) {
	is := is.New(t)

	file, err := sitemaps.Open("sitemaps/post-sitemap.xml")
	is.NoErr(err)
	defer file.Close()

	posts, err := pure2rss.ParseSiteMap(file)
	is.NoErr(err)

	is.Equal(len(posts), 1000) // expected number of parsed urls

	first := posts[0]
	second := posts[1]

	is.Equal(first.Loc, "https://blog.purestorage.com/")
	is.True(first.LastMod.Sub(time.Date(2024, 5, 2, 2, 0, 5, 0, time.UTC)).Seconds() == 0) // expected and parsed last modification are equal

	is.Equal(second.Loc, "https://blog.purestorage.com/ko/perspectives-ko/dietz-on-the-day-delivering-the-data-platform-for-the-cloud-era/")
	is.True(second.LastMod.Sub(time.Date(2017, 9, 29, 3, 45, 7, 0, time.UTC)).Seconds() == 0) // expected and parsed last modification are equal
}
